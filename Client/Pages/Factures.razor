@page "/factures"
@using Facturation.Shared
@inject HttpClient HttpClient

<h1>Factures</h1>

@if (allFactures == null)
{
    <p><em>Interrogation du serveur...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Numero</th>
                <th>Client</th>
                <th>Date d'emission</th>
                <th>Date d'echeance</th>
                <th>Montant du</th>
                <th>Montant regle</th>
                <th>Paiement</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var facture in allFactures)
            {
                <tr class='table-@ColorerFacture(facture)'>
                    <td>@facture.Numero</td>
                    <td>@facture.Client</td>
                    <td>@facture.DateEmission.Date</td>
                    <td>@facture.DateEcheance.Date</td>
                    <td>@facture.MontantDu</td>
                    <td>@facture.MontantRegle</td>
                    <td><a href="/SaisirPaiement/@facture.Numero">Enregistrer un paiement</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    static string ColorerFacture(Facture facture)
    {
        if (facture.estSoldee())
        {
            return "success";
        }
        else if (facture.estEnRetard())
        {
            return "danger";
        }
        else
        {
            return "default";
        }
    }

    private IEnumerable<Facture> allFactures = null;
    
    protected override async Task OnInitializedAsync()
    {
        allFactures = await HttpClient.GetFromJsonAsync<IEnumerable<Facture>>("api/factures");
    }

}
